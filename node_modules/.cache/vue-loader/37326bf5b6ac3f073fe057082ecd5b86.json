{"remainingRequest":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dev_r/Downloads/vue_front-master 3/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dev_r/Downloads/vue_front-master 3/src/pages/Dashboard.vue","mtime":1588603013916},{"path":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/babel-loader/lib/index.js","mtime":1588436830000},{"path":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n                <h2 class=\"card-title\">{{$t('dashboard.FineDust')}}</h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"btn-group btn-group-toggle\"\n                     :class=\"isRTL ? 'float-left' : 'float-right'\"\n                     data-toggle=\"buttons\">\n                  <label v-for=\"(option, index) in bigLineChartCategories\"\n                         :key=\"option\"\n                         class=\"btn btn-sm btn-primary btn-simple\"\n                         :class=\"{active: bigLineChart.activeIndex === index}\"\n                         :id=\"index\">\n                    <input type=\"radio\"\n                           @click=\"initBigChart(index)\"\n                           name=\"options\" autocomplete=\"off\"\n                           :checked=\"bigLineChart.activeIndex === index\">\n                    {{option}}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        ref=\"bigChart\"\n                        chart-id=\"big-line-chart\"\n                        :chart-data=\"bigLineChart.chartData\"\n                        :gradient-colors=\"bigLineChart.gradientColors\"\n                        :gradient-stops=\"bigLineChart.gradientStops\"\n                        :extra-options=\"bigLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-heart-2 text-primary \"></i>VOC 32.22 PPM</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"purple-line-chart\"\n                        :chart-data=\"vocLineChart.chartData\"\n                        :gradient-colors=\"vocLineChart.gradientColors\"\n                        :gradient-stops=\"vocLineChart.gradientStops\"\n                        :extra-options=\"vocLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-heart-2 text-primary \"></i>O2 21.8%</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"purple-line-chart\"\n                        :chart-data=\"o2LineChart.chartData\"\n                        :gradient-colors=\"o2LineChart.gradientColors\"\n                        :gradient-stops=\"o2LineChart.gradientStops\"\n                        :extra-options=\"o2LineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-heart-2 text-primary \"></i>CO2 1300 PPM</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"purple-line-chart\"\n                        :chart-data=\"co2LineChart.chartData\"\n                        :gradient-colors=\"co2LineChart.gradientColors\"\n                        :gradient-stops=\"co2LineChart.gradientStops\"\n                        :extra-options=\"co2LineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n\n\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-md-12\">\n        <card type=\"tasks\" :header-classes=\"{'text-right': isRTL}\">\n          <template slot=\"header\">\n            <h6 class=\"title d-inline\">{{$t('dashboard.tasks', {count: 5})}}</h6>\n            <p class=\"card-category d-inline\">{{$t('dashboard.today')}}</p>\n            <base-dropdown menu-on-right=\"\"\n                           tag=\"div\"\n                           title-classes=\"btn btn-link btn-icon\"\n                           aria-label=\"Settings menu\"\n                           :class=\"{'float-left': isRTL}\">\n              <i slot=\"title\" class=\"tim-icons icon-settings-gear-63\"></i>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.action')}}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.anotherAction')}}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.somethingElse')}}</a>\n            </base-dropdown>\n          </template>\n          <div class=\"table-full-width table-responsive\">\n            <task-list></task-list>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-6 col-md-12\">\n        <card class=\"card\" :header-classes=\"{'text-right': isRTL}\">\n          <h4 slot=\"header\" class=\"card-title\">{{$t('dashboard.simpleTable')}}</h4>\n          <div class=\"table-responsive\">\n            <user-table></user-table>\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import LineChart from '@/components/Charts/LineChart';\n  import BarChart from '@/components/Charts/BarChart';\n  import * as chartConfigs from '@/components/Charts/config';\n  import TaskList from './Dashboard/TaskList';\n  import UserTable from './Dashboard/UserTable';\n  import config from '@/config';\n  import axios from 'axios';\n  //import {Dbconnetc} from '../backend/dust_pm1.js';\n  //var Dbconnect = require('../backend/dust_pm1');\n  \n  var arr = [0,0,0,0,0,0,0,0,0,0,0,0];\n \n\n  export default {\n    components: {\n      LineChart,\n      BarChart,\n      TaskList,\n      UserTable\n    },\n    data() {\n      var theArray=[];\n      let newItem=[];\n       axios.get('http://localhost:3000/dbcon')\n                .then((res) => {\n                  newItem = {\n                  id: res.data,\n                };\n                 for(var i =0; i<12;i++) \n                   theArray.push(newItem.id[i]);\n                //userStr = JSON.parse(JSON.stringify(newItem.id));\n                //results=JSON.stringify(res.data);\n                console.log(theArray[11])  // = 4\n                return this.theArray;\n                //return this.results[1];\n             })\n            \n      return {\n        theArray:theArray,\n        bigLineChart: {\n          \n          allData: [\n            theArray,\n            [100, 70, 1000, 70, 11015, 60, 11111, 60, 4220, 80, 110, 100],\n            [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          ],\n        \n          activeIndex: 0,\n          chartData: null,\n          extraOptions: chartConfigs.purpleChartOptions,\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n          categories: []\n        },\n        vocLineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['10시', '11시', '12시', '13시', '14시', '15시'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 32.22],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        o2LineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['10시', '11시', '12시', '13시', '14시', '15시'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [100, 20, 40, 50, 20, 21.8],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        co2LineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['10시', '11시', '12시', '13시', '14시', '15시'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [10, 20, 80, 70, 30, 13],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        purpleLineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['10시', '11시', '12시', '13시', '14시', '15시'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        greenLineChart: {\n          extraOptions: chartConfigs.greenChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n            datasets: [{\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            }]\n          },\n          gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n          gradientStops: [1, 0.4, 0],\n        },\n        blueBarChart: {\n          extraOptions: chartConfigs.barChartOptions,\n          chartData: {\n            labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n            datasets: [{\n              label: \"Countries\",\n              fill: true,\n              borderColor: config.colors.info,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [53, 20, 10, 80, 100, 45],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n        }\n      }\n    },\n    computed: {\n      enableRTL() {\n        return this.$route.query.enableRTL;\n      },\n      isRTL() {\n        return this.$rtl.isRTL;\n      },\n      bigLineChartCategories() {\n        return this.$t('dashboard.chartCategories');\n      }\n    },\n    methods: {\n      initBigChart(index) {\n        let chartData = {\n          datasets: [{\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.bigLineChart.allData[index]\n          }],\n          labels: ['4시', '5시', '6시', '7시', '8시', '9시', '10시', '11시', '12시', '13시', '14시', '15시'],\n        }\n        this.$refs.bigChart.updateGradients(chartData);\n        this.bigLineChart.chartData = chartData;\n        this.bigLineChart.activeIndex = index;\n      }\n\n    },\n    mounted() {\n      this.i18n = this.$i18n;\n      if (this.enableRTL) {\n        this.i18n.locale = 'ar';\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n    },\n    beforeDestroy() {\n      if (this.$rtl.isRTL) {\n        this.i18n.locale = 'en';\n        this.$rtl.disableRTL();\n      }\n    }\n  };\n\n</script>\n<style>\n</style>\n"]}]}