{"remainingRequest":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/babel-loader/lib/index.js!/Users/dev_r/Downloads/vue_front-master 3/src/backend/db_select_dust_pm1.js","dependencies":[{"path":"/Users/dev_r/Downloads/vue_front-master 3/src/backend/db_select_dust_pm1.js","mtime":1588436830000},{"path":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/cache-loader/dist/cjs.js","mtime":1588436830000},{"path":"/Users/dev_r/Downloads/vue_front-master 3/node_modules/babel-loader/lib/index.js","mtime":1588436830000}],"contextDependencies":[],"result":["var pool = require('./db_connect');\n\nmodule.exports = function () {\n  return {\n    select: function (callback) {\n      pool.getConnection(function (err, con) {\n        var nowDate = new Date(); //sql문 의미 : 오늘 날짜에 해당하는 data 중에서 최근 12시간의 값들만 추출\n\n        var sql = 'select * from dust_1 where checkDate=\\'' + '' + nowDate.getFullYear() + '-' + (parseInt(nowDate.getMonth()) + 1) + '-' + nowDate.getDate() + '\\'' + ' and checkTime<=\\'' + nowDate.getHours() + ':00:00\\'' + ' and checkTime>=\\'' + (nowDate.getHours() - 12) + ':00:00\\'';\n        /*\n         오전 11시 이전에 호출하는 경우 하루 전날의 저녁부터 데이터를 가져오는 로직 추가 필요\n        ex. 오전 3시에 페이지를 켰을 경우, 전날 16:00:00 부터 데이터를 가져와야함\n          */\n\n        con.query(sql, function (err, result, fields) {\n          con.release();\n          if (err) return callback(err);\n          callback(null, result);\n        });\n      });\n    },\n    pool: pool\n  };\n};",{"version":3,"sources":["/Users/dev_r/Downloads/vue_front-master 3/src/backend/db_select_dust_pm1.js"],"names":["pool","require","module","exports","select","callback","getConnection","err","con","nowDate","Date","sql","getFullYear","parseInt","getMonth","getDate","getHours","query","result","fields","release"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAY;AACzB,SAAO;AACHC,IAAAA,MAAM,EAAE,UAAUC,QAAV,EAAoB;AACxBL,MAAAA,IAAI,CAACM,aAAL,CAAmB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACnC,YAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd,CADmC,CAEnC;;AAEA,YAAIC,GAAG,GAAG,4CACN,EADM,GACDF,OAAO,CAACG,WAAR,EADC,GACuB,GADvB,IAC8BC,QAAQ,CAACJ,OAAO,CAACK,QAAR,EAAD,CAAR,GAA+B,CAD7D,IACkE,GADlE,GACwEL,OAAO,CAACM,OAAR,EADxE,GAC4F,IAD5F,GAEJ,oBAFI,GAEmBN,OAAO,CAACO,QAAR,EAFnB,GAEwC,UAFxC,GAEqD,oBAFrD,IAE6EP,OAAO,CAACO,QAAR,KAAqB,EAFlG,IAEwG,UAFlH;AAKA;;;;;AAOAR,QAAAA,GAAG,CAACS,KAAJ,CAAUN,GAAV,EAAe,UAAUJ,GAAV,EAAeW,MAAf,EAAuBC,MAAvB,EAA+B;AAC1CX,UAAAA,GAAG,CAACY,OAAJ;AACA,cAAIb,GAAJ,EACI,OAAOF,QAAQ,CAACE,GAAD,CAAf;AACJF,UAAAA,QAAQ,CAAC,IAAD,EAAOa,MAAP,CAAR;AACH,SALD;AAMH,OAtBD;AAuBH,KAzBE;AA0BHlB,IAAAA,IAAI,EAAEA;AA1BH,GAAP;AA4BH,CA7BD","sourcesContent":["var pool = require('./db_connect');\n\nmodule.exports = function () {\n    return {\n        select: function (callback) {\n            pool.getConnection(function (err, con) {\n                var nowDate = new Date();\n                //sql문 의미 : 오늘 날짜에 해당하는 data 중에서 최근 12시간의 값들만 추출\n\n                var sql = 'select * from dust_1 where checkDate=\\'' +\n                    '' + nowDate.getFullYear() + '-' + (parseInt(nowDate.getMonth()) + 1) + '-' + nowDate.getDate() + '\\''\n                    + ' and checkTime<=\\'' + nowDate.getHours() + ':00:00\\'' + ' and checkTime>=\\'' + (nowDate.getHours() - 12) + ':00:00\\'';\n\n\n                /*\n\n                오전 11시 이전에 호출하는 경우 하루 전날의 저녁부터 데이터를 가져오는 로직 추가 필요\n                ex. 오전 3시에 페이지를 켰을 경우, 전날 16:00:00 부터 데이터를 가져와야함\n\n                 */\n\n                con.query(sql, function (err, result, fields) {\n                    con.release();\n                    if (err)\n                        return callback(err);\n                    callback(null, result);\n                });\n            });\n        },\n        pool: pool\n    }\n};"]}]}